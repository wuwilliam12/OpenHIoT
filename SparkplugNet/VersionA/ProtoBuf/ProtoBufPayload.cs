// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: my.proto
// </auto-generated>

#region Designer generated code
#nullable enable
#pragma warning disable CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("SparkplugNet.Tests")]
namespace SparkplugNet.VersionA.ProtoBuf
{
    [global::ProtoBuf.ProtoContract()]
    internal partial class ProtoBufPayload : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension? extensionValue;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref extensionValue, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"timestamp")]
        public long? Timestamp { get; set; }

        [global::ProtoBuf.ProtoMember(2, Name = @"position")]
        public KuraPosition? Position { get; set; }

        [global::ProtoBuf.ProtoMember(5000, Name = @"metric")]
        public global::System.Collections.Generic.List<KuraMetric> Metrics { get; set; } = new global::System.Collections.Generic.List<KuraMetric>();

        [global::ProtoBuf.ProtoMember(5001, Name = @"body")]
        public byte[] Body { get; set; } = Array.Empty<byte>();

        [global::ProtoBuf.ProtoContract()]
        internal partial class KuraMetric : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension? extensionValue;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref extensionValue, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"name", IsRequired = true)]
            public string Name { get; set; } = string.Empty;

            [global::ProtoBuf.ProtoMember(2, Name = @"type", IsRequired = true)]
            public ValueType DataType { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"double_value")]
            public double? DoubleValue { get; set; }

            [global::ProtoBuf.ProtoMember(4, Name = @"float_value")]
            public float? FloatValue { get; set; }

            [global::ProtoBuf.ProtoMember(5, Name = @"long_value")]
            public long? LongValue { get; set; }

            [global::ProtoBuf.ProtoMember(6, Name = @"int_value")]
            public int? IntValue { get; set; }

            [global::ProtoBuf.ProtoMember(7, Name = @"bool_value")]
            public bool? BooleanValue { get; set; }

            [global::ProtoBuf.ProtoMember(8, Name = @"string_value")]
            public string? StringValue { get; set; }

            [global::ProtoBuf.ProtoMember(9, Name = @"bytes_value")]
            public byte[]? BytesValue { get; set; }

            [global::ProtoBuf.ProtoContract()]
            public enum ValueType
            {
                [global::ProtoBuf.ProtoEnum(Name = @"DOUBLE")]
                Double = 0,
                [global::ProtoBuf.ProtoEnum(Name = @"FLOAT")]
                Float = 1,
                [global::ProtoBuf.ProtoEnum(Name = @"INT64")]
                Int64 = 2,
                [global::ProtoBuf.ProtoEnum(Name = @"INT32")]
                Int32 = 3,
                [global::ProtoBuf.ProtoEnum(Name = @"BOOL")]
                Bool = 4,
                [global::ProtoBuf.ProtoEnum(Name = @"STRING")]
                String = 5,
                [global::ProtoBuf.ProtoEnum(Name = @"BYTES")]
                Bytes = 6
            }
        }

        [global::ProtoBuf.ProtoContract()]
        internal partial class KuraPosition : global::ProtoBuf.IExtensible
        {
            private global::ProtoBuf.IExtension? extensionValue;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
                => global::ProtoBuf.Extensible.GetExtensionObject(ref extensionValue, createIfMissing);

            [global::ProtoBuf.ProtoMember(1, Name = @"latitude", IsRequired = true)]
            public double Latitude { get; set; }

            [global::ProtoBuf.ProtoMember(2, Name = @"longitude", IsRequired = true)]
            public double Longitude { get; set; }

            [global::ProtoBuf.ProtoMember(3, Name = @"altitude")]
            public double? Altitude { get; set; }

            [global::ProtoBuf.ProtoMember(4, Name = @"precision")]
            public double? Precision { get; set; }

            [global::ProtoBuf.ProtoMember(5, Name = @"heading")]
            public double? Heading { get; set; }

            [global::ProtoBuf.ProtoMember(6, Name = @"speed")]
            public double? Speed { get; set; }

            [global::ProtoBuf.ProtoMember(7, Name = @"timestamp")]
            public long? Timestamp { get; set; }

            [global::ProtoBuf.ProtoMember(8, Name = @"satellites")]
            public int? Satellites { get; set; }

            [global::ProtoBuf.ProtoMember(9, Name = @"status")]
            public int? Status { get; set; }
        }
    }
}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#nullable disable
#endregion
